---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-example
---
apiVersion: v1
data:
  role-id: OTNmYTRiMDctZjc5Ni1kOTQ5LTBlOWEtMTk3NWUzNWU0YTAxCg==
  secret-id: NThjZWZiNDUtOWNlNC1jM2ZlLWU5MTMtN2RiYmNmM2RiNGYzCg==
kind: Secret
metadata:
  name: vault-development-approle-secretid
  namespace: default
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-example-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-example
  template:
    metadata:
      labels:
        app: app-example
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-configmap: 'vault-sidecar-configmap'
        # AppRole/SecretID used by the vault agent to authenticate
        vault.hashicorp.com/agent-extra-secret: vault-development-approle-secretid 
        # Application secrets: Does not work :(
        # vault.hashicorp.com/agent-inject-secret-shared: secret/shared-secret
        # vault.hashicorp.com/agent-inject-template-shared: |
        #   {{- with secret "secret/shared-secret" -}}
        #     export SHARED_SECRET_SECRET="{{ .Data.data.secret }}"
        #     export SHARED_SECRET_FOO="{{ .Data.data.foo }}"
        #   {{- end }}
        # is mounted under /vault/custom in the sidecar
        #vault.hashicorp.com/tls-secret: 'vault-tls-client'
    spec:
      containers:
        - name: app
          image: docker.io/library/busybox:1.28
          command: ['sh', '-c', 'source /vault/secrets/dev-secret-envvars && echo "Hello, Kubernetes!\nDEV_SECRET_SECRET=$DEV_SECRET_SECRET\nDEV_SECRET_FOO=$DEV_SECRET_FOO\n" && sleep 3600']
          volumeMounts:
          - name: vault-template-volume
            mountPath: /vault/templates/
      serviceAccountName: app-example
      volumes:
        - name: vault-template-volume
          configMap:
            name: vault-injector-envvars-template
            optional: true # mark the source ConfigMap as optional

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: vault-injector-envvars-template
# data:
#   envvars.tpl: |
#     {{ with secret "secret/dev-secret" -}}
#       export DEV_SECRET_SECRET="{{ .Data.data.secret }}"
#       export DEV_SECRET_FOO="{{ .Data.data.foo }}"
#     {{- end }}   

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-sidecar-configmap
data:
  config.hcl: |
    "auto_auth" = {
      "method" = {
        "type" = "approle"
        "config" = {
          "role_id_file_path" = "/vault/custom/role-id"
          "secret_id_file_path" = "/vault/custom/secret-id"
          "remove_secret_id_file_after_reading" = false
        }
      }

      "sink" = {
        "config" = {
          "path" = "/home/vault/.token"
        }

        "type" = "file"
      }
    }

    "exit_after_auth" = false
    "pid_file" = "/home/vault/.pid"

    "template" = {
      "contents" = <<EOT
        {{- with secret "secret/shared-secret" -}}
          export SHARED_SECRET_SECRET="{{ .Data.data.secret }}"
          export SHARED_SECRET_FOO="{{ .Data.data.foo }}"
        {{- end }}
    EOT
      "destination" = "/vault/secrets/shared-secret-envvars"
    }

    "template" = {
      "contents" = <<EOT
        {{- with secret "secret/dev-secret" -}}
        export DEV_SECRET_SECRET="{{ .Data.data.secret }}"
        export DEV_SECRET_FOO="{{ .Data.data.foo }}"
        {{- end }}
    EOT
      "destination" = "/vault/secrets/dev-secret-envvars"
    }

  config-init.hcl: |
    "auto_auth" = {
      "method" = {
        "type" = "approle"
        "config" = {
          "role_id_file_path" = "/vault/custom/role-id"
          "secret_id_file_path" = "/vault/custom/secret-id"
          "remove_secret_id_file_after_reading" = false
        }
      }

      "sink" = {
        "config" = {
          "path" = "/home/vault/.token"
        }

        "type" = "file"
      }
    }

    "exit_after_auth" = true
    "pid_file" = "/home/vault/.pid"
